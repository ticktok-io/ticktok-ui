version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:12

fast-checkout: &attach-workspace
  attach_workspace:
    at: ~/repo

jobs:
  install:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-

      - run: npm ci

      - save_cache:
          paths:
            - node_modules  # location depends on npm version
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}

      - persist_to_workspace:
          root: ~/repo
          paths: .

  test:
    working_directory: ~/repo
    machine: true
    steps:
      - *attach-workspace
      - run:
          name: Install node@v12.14.0
          command: .circleci/upgrade_node.sh
      - run:
          name: Unit tests
          command: CI=true npm test
      - run:
          name: Start ticktok.io
          command: docker-compose up -d && sleep 15
      - run:
          name: Start UI
          command: |
            npm start &
            sleep 5
      - run:
          name: Specification tests
          command: npm run ci-spec
      - store_artifacts:
          path: screenshots
      - store_test_results:
          path: test-results

  build:
    <<: *defaults
    steps:
      - *attach-workspace
      - run:
          name: Build Dashboard
          command: PUBLIC_URL=' ' npm run build
      - persist_to_workspace:
          root: ~/repo
          paths: .

  deploy:
    <<: *defaults
    docker:
      - image: circleci/node:8
    steps:
      - *attach-workspace
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  ticktok-ui-npm:
    jobs:
      - install:
          filters:
            tags:
              only: /^v.*/
      - test:
          requires:
            - install
          filters:
            tags:
              only: /^v.*/
      - build:
          requires:
            - install
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - test
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

